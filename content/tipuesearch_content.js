var tipuesearch = {"pages": [{'title': 'About', 'text': 'Group 3 Repository: \xa0 40723103 \xa0 | Site: \xa0 40723103 Repository: \xa0 40723110 \xa0 | Site: \xa0 40723110 Repository: \xa0 40723112 \xa0 | Site: \xa0 40723112 Repository: \xa0 40723120 \xa0 | Site: \xa0 40723120 Repository: \xa0 40723125 \xa0 | Site: \xa0 40723125 Repository: \xa0 40723126 \xa0 | Site: \xa0 40723126 Repository: \xa0 40723128 \xa0 | Site: \xa0 40723128 Repository: \xa0 40723130 \xa0 | Site: \xa0 40723130 Repository: \xa0 40723139 \xa0 | Site: \xa0 40723139 Repository: \xa0 40723142 \xa0 | Site: \xa0 40723142 Repository: \xa0 40723145 \xa0 | Site: \xa0 40723145 Repository: \xa0 40723146 \xa0 | Site: \xa0 40723146', 'tags': '', 'url': 'About.html'}, {'title': '利用 cmsimde 建立靜態網誌方法', 'text': '1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git', 'tags': '', 'url': '利用 cmsimde 建立靜態網誌方法.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};